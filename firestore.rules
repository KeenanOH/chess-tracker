rules_version = '2';

service cloud.firestore {

  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
    	return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function isHomeSchool(matchId) {
    	return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.schoolId == get(/databases/$(database)/documents/matches/$(matchId)).data.homeSchool["id"];
    }

    function isAwaySchool(matchId) {
    	return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.schoolId == get(/databases/$(database)/documents/matches/$(matchId)).data.awaySchool["id"];
    }

    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow create: if isAuthenticated() && !exists(/databases/$(database)/documents/users/$(request.auth.uid)) && request.resource.data.keys().hasAll(["schoolId", "isAdmin"]) && !request.resource.data.isAdmin;
      allow update: if isAuthenticated() && request.auth.uid == userId && request.resource.data.keys().hasOnly(["schoolId"]);
      allow write: if isAdmin();
    }

    match /schools/{schoolId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    match /schools/{schoolId}/players/{playerId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || (isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.schoolId == schoolId);
    }

    match /matches/{matchId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    match /matches/{matchId}/boards/{boardId} {
      allow read: if isAuthenticated();
      allow update: if isHomeSchool(matchId) || isAwaySchool(matchId);
      allow write: if isAdmin();
    }

  }

}
