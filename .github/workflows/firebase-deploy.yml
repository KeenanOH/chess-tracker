name: Firebase Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy-website:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm install

      - name: Create .env with Github Secrets and run script
        run: |
          touch .env
          echo API_KEY=$API_KEY >> .env
          echo AUTH_DOMAIN=$AUTH_DOMAIN >> .env
          echo PROJECT_ID=$PROJECT_ID >> .env
          echo STORAGE_BUCKET=$STORAGE_BUCKET >> .env
          echo MESSAGING_SENDER_ID=$MESSAGING_SENDER_ID >> .env
          echo APP_ID=$APP_ID >> .env
        env:
          API_KEY: ${{ secrets.API_KEY }}
          AUTH_DOMAIN: ${{ secrets.AUTH_DOMAIN }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
          MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
          APP_ID: ${{ secrets.APP_ID }}

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          projectId: chess-tracker-react
          channelId: live
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
